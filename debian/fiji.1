.TH FIJI 1
.\"
.\" fiji.1: 
.\"
.\" Version 0.9.3.20080807rc3
.\"

.\" Text begins
.SH NAME
fiji \- Fiji Is Just ImageJ
.SH SYNOPSIS
.B fiji
[\fIJAVA OPTIONS \-\-\fR]... [\fIIMAGEJ OPTIONS\fR]... [\fIFILENAME\fR]...
.SH DESCRIPTION
.PP
Fiji is a distribution of ImageJ (strictly speaking, ImageJA)
which contains a number of plugins which may be of useful to
biologists doing image processing and analysis.  The Fiji
project aims to simplifying the installation, development and
usage of ImageJ and a set of powerful plugins.
.SH OPTIONS
The Java options are passed to the Java runtime, and ImageJ
options are passed to ImageJ (or Jython, JRuby, etc.)  In
addition, the following options are supported by Fiji:
.SS GENERAL OPTIONS
.TP
\fB\-h\fR, \fB\-\-help\fR
Displays some usage information
.TP
\fB\-\-dry\-run\fR
Show the command line, but do not run anything
.TP
\fB\-\-system\fR
Do not try to run the bundled Java, instead use the system's
default version
.TP
\fB\-\-headless\fR
Run without the graphical user interface
.TP
\fB\-\-ij\-dir\fR \fIDIRECTORY\fR
Sets the Fiji directory (in which Fiji expects to find the
directories 'jars', 'plugins', 'macros', etc.)
.TP
\fB\-\-heap\fR, \fB\-\-mem\fR, \fB\-\-memory\fR \fISIZE\fR
Sets Java's heap size to SIZE (e.g. 512m)
.TP
\fB\-\-class\-path\fR, \fB\-\-classpath\fR, \fB\-classpath\fR, \fB\-\-cp\fR, \fB\-cp\fR, \fICLASSPATH\fR
Append CLASSPATH to the Java class path
.TP
\fB\-\-ext\fR \fIDIRECTORY\fR
Set Java's extension directory to DIRECTORY.
.SS IMAGEJ OPTIONS
.TP
\fB\-\-allow\-multiple\fR
Do not reuse any existing ImageJ instance
.TP
\fB\-\-plugins\fR \fIDIRECTORY\fR
Use DIRECTORY as the plugins directory instead of
/usr/lib/fiji/plugins/
.SS NON-IMAGEJ OPTIONS
The following options are useful if you want to use the Fiji
binary to run programs other than ImageJ:
.TP
\fB\-\-jdb\fR
Start in JDB, the Java debugger
.TP
\fB\-\-jython\fR
Start Jython instead of ImageJ.  This is the default when called
with a file ending in .py
\fB\-\-jruby\fR
Start JRuby instead of ImageJ.  This is the default when called
with a file ending in .rb
\fB\-\-main\-class\fR \fICLASSNAME\fR
Start the given class instead of ImageJ
\fB\-\-build\fR
Start Fiji Build instead of ImageJ
\fB\-\-javac\fR
Start JavaC, the Java Compiler, instead of ImageJ

.SS STANDARD IMAGEJ OPTIONS
The following options should work as the normally would in
ImageJ:
.TP
\fB\-ijpath 
Specifies the path to the directory containing the plugins
directory.  So, if you put plugins in ~/.fiji/plugins/ then
you would pass -ijpath ~/.fiji/
.TP
\fB-port\fIN\fR
Specifies the port ImageJ uses to determine if another instance is running
.nf
Example 1: -port1 (use default port address + 1)
Example 2: -port2 (use default port address + 2)
Example 3: -port0 (do not check for another instance)
(The default port is 57294.)
.fi
.TP
\fB-macro \fIPATH [\fIARG\fR]
.nf
Runs a macro, passing it an optional argument
Example 1: -macro analyze.ijm
Example 2: -macro analyze /Users/wayne/images/stack1
.fi
.TP
\fB-eval \fIMACRO-EXPRESSION\fR
.nf
Evaluates macro code
Example 1: -eval "print('Hello, world');"
Example 2: -eval "return getVersion();"
.fi
.TP
\fB\-run\fR \fICOMMAND\fR
.nf
Runs an ImageJ menu command
Example: -run "About ImageJ..."
.fi
.SH FILES
.TP
.B /usr/lib/fiji/plugins/
Plugins for Fiji should are installed into this directory.
Currently only a single plugins directory is supported, so
if you want to use your a different plugins directory, you will
need to use the \fB\-\-plugins\fR option described above.
.fi
.SH AUTHOR
Wayne Rasband <wsr@nih.gov> and others.
.SH VERSION
Version 0.9.3.20080807rc3
.SH LICENSE
.PP
ImageJ is in the public domain.  The rest of Fiji is covered by
licenses as described in /usr/share/doc/fiji/LICENSES
