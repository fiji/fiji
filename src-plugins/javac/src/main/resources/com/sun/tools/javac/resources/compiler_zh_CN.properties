#
# Copyright (c) 2005, 2006, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

##
## errors
##

compiler.err.abstract.cant.be.instantiated=\
{0} \u662f\u62bd\u8c61\u7684\uff1b\u65e0\u6cd5\u5bf9\u5176\u8fdb\u884c\u5b9e\u4f8b\u5316
compiler.err.abstract.meth.cant.have.body=\
\u62bd\u8c61\u65b9\u6cd5\u4e0d\u80fd\u6709\u4e3b\u4f53
compiler.err.already.annotated=\
{0} {1} \u5df2\u88ab\u6ce8\u91ca
compiler.err.already.defined=\
\u5df2\u5728 {1} \u4e2d\u5b9a\u4e49 {0}
compiler.err.already.defined.single.import=\
\u5df2\u5728 single-type \u5bfc\u5165\u4e2d\u5b9a\u4e49 {0}
compiler.err.already.defined.static.single.import=\
\u5df2\u5728\u9759\u6001 single-type \u5bfc\u5165\u4e2d\u5b9a\u4e49 {0}
compiler.err.already.defined.this.unit=\
\u5df2\u5728\u8be5\u7f16\u8bd1\u5355\u5143\u4e2d\u5b9a\u4e49 {0}
compiler.err.annotation.missing.default.value=\
\u6ce8\u91ca {0} \u7f3a\u5c11 {1}
compiler.err.annotation.not.valid.for.type=\
\u5bf9\u4e8e\u7c7b\u578b\u4e3a {0} \u7684\u503c\uff0c\u6ce8\u91ca\u65e0\u6548
compiler.err.annotation.type.not.applicable=\
\u6ce8\u91ca\u7c7b\u578b\u4e0d\u9002\u7528\u4e8e\u8be5\u7c7b\u578b\u7684\u58f0\u660e
compiler.err.annotation.value.must.be.annotation=\
\u6ce8\u91ca\u503c\u5fc5\u987b\u4e3a\u6ce8\u91ca
compiler.err.annotation.value.must.be.class.literal=\
\u6ce8\u91ca\u503c\u5fc5\u987b\u4e3a\u7c7b\u5b57\u9762\u503c
compiler.err.annotation.value.must.be.name.value=\
    \u6ce8\u91ca\u503c\u5fc5\u987b\u4e3a\u4ee5\u4e0b\u683c\u5f0f\uff1a\u201cname=value\u201d
compiler.err.annotation.value.not.allowable.type=\
\u6ce8\u91ca\u503c\u4e0d\u662f\u5141\u8bb8\u7684\u7c7b\u578b
compiler.err.anon.class.impl.intf.no.args=\
\u533f\u540d\u7c7b\u5b9e\u73b0\u63a5\u53e3\uff1b\u4e0d\u80fd\u6709\u53c2\u6570
compiler.err.anon.class.impl.intf.no.typeargs=\
\u533f\u540d\u7c7b\u5b9e\u73b0\u63a5\u53e3\uff1b\u4e0d\u80fd\u5177\u6709\u7c7b\u578b\u53c2\u6570
compiler.err.anon.class.impl.intf.no.qual.for.new=\
\u533f\u540d\u7c7b\u5b9e\u73b0\u63a5\u53e3\uff1b\u4e0d\u80fd\u6709\u9650\u5b9a\u7b26 - \u5bf9\u4e8e\u65b0
compiler.err.array.and.varargs=\
\u65e0\u6cd5\u5728 {2} \u4e2d\u540c\u65f6\u58f0\u660e {0} \u548c {1}
compiler.err.array.dimension.missing=\
\u7f3a\u5c11\u6570\u7ec4\u7ef4\u6570
compiler.err.array.req.but.found=\
\u9700\u8981\u6570\u7ec4\uff0c\u4f46\u627e\u5230 {0}

compiler.err.assignment.from.super-bound=\
\u901a\u8fc7\u901a\u914d\u7b26 {0} \u6307\u5b9a
compiler.err.assignment.to.extends-bound=\
\u6307\u5b9a\u7ed9\u901a\u914d\u7b26 {0}
compiler.err.attribute.value.must.be.constant=\
\u5c5e\u6027\u503c\u5fc5\u987b\u4e3a\u5e38\u91cf

compiler.err.break.outside.switch.loop=\
\u5728 switch \u6216 loop \u5916\u90e8\u4e2d\u65ad

compiler.err.call.must.be.first.stmt.in.ctor=\
\u5bf9 {0} \u7684\u8c03\u7528\u5fc5\u987b\u662f\u6784\u9020\u51fd\u6570\u4e2d\u7684\u7b2c\u4e00\u4e2a\u8bed\u53e5
compiler.err.cant.apply.symbol=\
\u65e0\u6cd5\u5c06 {1} \u4e2d\u7684 {0} \u5e94\u7528\u4e8e {2}({3})
compiler.err.cant.apply.symbol.1=\
\u65e0\u6cd5\u5c06 {1} \u4e2d\u7684 {0} \u5e94\u7528\u4e8e {2}({3})\uff1b{4}
compiler.err.cant.assign.val.to.final.var=\
\u65e0\u6cd5\u4e3a\u6700\u7ec8\u53d8\u91cf {0} \u6307\u5b9a\u503c
compiler.err.cant.deref=\
\u65e0\u6cd5\u53d6\u6d88\u5f15\u7528 {0}
compiler.err.cant.extend.intf.annotation=\
\u5bf9\u4e8e @interface\uff0c\u4e0d\u5141\u8bb8 "extends"
compiler.err.cant.inherit.from.final=\
\u65e0\u6cd5\u4ece\u6700\u7ec8 {0} \u8fdb\u884c\u7ee7\u627f
compiler.err.cant.ref.before.ctor.called=\
\u65e0\u6cd5\u5728\u8c03\u7528\u7236\u7c7b\u578b\u6784\u9020\u51fd\u6570\u4e4b\u524d\u5f15\u7528 {0}
compiler.err.cant.ret.val.from.meth.decl.void=\
\u5bf9\u4e8e\u7ed3\u679c\u7c7b\u578b\u4e3a void \u7684\u65b9\u6cd5\uff0c\u65e0\u6cd5\u8fd4\u56de\u503c
compiler.err.cant.select.static.class.from.param.type=\
\u65e0\u6cd5\u4ece\u53c2\u6570\u5316\u7684\u7c7b\u578b\u4e2d\u9009\u62e9\u9759\u6001\u7c7b
compiler.err.cant.inherit.diff.arg=\
\u65e0\u6cd5\u4f7f\u7528\u4ee5\u4e0b\u4e0d\u540c\u7684\u53c2\u6570\u7ee7\u627f {0}\uff1a<{1}> \u548c <{2}>
compiler.err.catch.without.try=\
"catch" \u4e0d\u5e26\u6709 "try"
compiler.err.clash.with.pkg.of.same.name=\
{0} \u4e0e\u5e26\u6709\u76f8\u540c\u540d\u79f0\u7684\u8f6f\u4ef6\u5305\u51b2\u7a81
compiler.err.const.expr.req=\
\u9700\u8981\u5e38\u91cf\u8868\u8fbe\u5f0f
compiler.err.enum.const.req=\
\u9700\u8981\u975e\u9650\u5b9a\u679a\u4e3e\u5e38\u91cf\u540d\u79f0
compiler.err.cont.outside.loop=\
continue \u5728 loop \u5916\u90e8
compiler.err.cyclic.inheritance=\
\u5faa\u73af\u7ee7\u627f\u6d89\u53ca {0}
compiler.err.cyclic.annotation.element=\
\u5faa\u73af\u6ce8\u91ca\u5143\u7d20\u7c7b\u578b
compiler.err.call.to.super.not.allowed.in.enum.ctor=\
\u5728\u679a\u4e3e\u6784\u9020\u51fd\u6570\u4e2d\u4e0d\u5141\u8bb8\u8c03\u7528\u7236\u7c7b\u578b
compiler.err.no.superclass=\
{0} \u4e0d\u5177\u6709\u7236\u7c7b

compiler.err.concrete.inheritance.conflict=\
{1} \u4e2d\u7684\u65b9\u6cd5 {0} \u548c {3} \u4e2d\u7684\u65b9\u6cd5 {2} \u662f\u4f7f\u7528\u76f8\u540c\u7684\u7b7e\u540d\u7ee7\u627f\u7684

compiler.err.default.allowed.in.intf.annotation.member=\
\u4ec5\u5728 @interface \u6210\u5458\u4e2d\u5141\u8bb8\u4f7f\u7528\u9ed8\u8ba4\u503c
compiler.err.doesnt.exist=\
\u8f6f\u4ef6\u5305 {0} \u4e0d\u5b58\u5728
compiler.err.duplicate.annotation=\
\u6ce8\u91ca\u91cd\u590d
compiler.err.duplicate.annotation.member.value=\
{1} \u4e2d\u7684\u6ce8\u91ca\u6210\u5458\u503c {0} \u91cd\u590d
compiler.err.duplicate.class=\
\u7c7b\u91cd\u590d\uff1a {0}
compiler.err.duplicate.case.label=\
case \u6807\u7b7e\u91cd\u590d
compiler.err.duplicate.default.label=\
default \u6807\u7b7e\u91cd\u590d

compiler.err.else.without.if=\
"else" \u4e0d\u5e26\u6709 "if"
compiler.err.empty.char.lit=\
\u7a7a\u5b57\u7b26\u5b57\u9762\u503c
compiler.err.encl.class.required=\
\u9700\u8981\u5305\u542b {0} \u7684\u5c01\u95ed\u5b9e\u4f8b
compiler.err.enum.annotation.must.be.enum.constant=\
\u679a\u4e3e\u6ce8\u91ca\u503c\u5fc5\u987b\u662f\u679a\u4e3e\u5e38\u91cf

compiler.err.enum.cant.be.instantiated=\
\u65e0\u6cd5\u5b9e\u4f8b\u5316\u679a\u4e3e\u7c7b\u578b
compiler.err.enum.label.must.be.unqualified.enum=\
\u679a\u4e3e switch case \u6807\u7b7e\u5fc5\u987b\u4e3a\u679a\u4e3e\u5e38\u91cf\u7684\u975e\u9650\u5b9a\u540d\u79f0
compiler.err.enum.no.subclassing=\
\u7c7b\u65e0\u6cd5\u76f4\u63a5\u7ee7\u627f java.lang.Enum
compiler.err.enum.types.not.extensible=\
\u679a\u4e3e\u7c7b\u578b\u4e0d\u53ef\u7ee7\u627f
compiler.err.enum.no.finalize=\
\u679a\u4e3e\u4e0d\u80fd\u6709 finalize \u65b9\u6cd5
compiler.err.error.reading.file=\
\u8bfb\u53d6 {0} \u65f6\u51fa\u9519\uff1b{1}
compiler.err.except.already.caught=\
\u5df2\u6355\u6349\u5230\u5f02\u5e38 {0}
compiler.err.except.never.thrown.in.try=\
\u5728\u76f8\u5e94\u7684 try \u8bed\u53e5\u4e3b\u4f53\u4e2d\u4e0d\u80fd\u629b\u51fa\u5f02\u5e38 {0}

compiler.err.final.parameter.may.not.be.assigned=\
\u4e0d\u80fd\u6307\u5b9a\u6700\u7ec8\u53c2\u6570 {0}
compiler.err.finally.without.try=\
"finally" \u4e0d\u5e26\u6709 "try"
compiler.err.foreach.not.applicable.to.type=\
foreach \u4e0d\u9002\u7528\u4e8e\u8868\u8fbe\u5f0f\u7c7b\u578b
compiler.err.fp.number.too.large=\
\u6d6e\u70b9\u6570\u8fc7\u5927
compiler.err.fp.number.too.small=\
\u6d6e\u70b9\u6570\u8fc7\u5c0f

compiler.err.generic.array.creation=\
\u521b\u5efa\u6cdb\u578b\u6570\u7ec4
compiler.err.generic.throwable=\
\u6cdb\u578b\u7c7b\u65e0\u6cd5\u7ee7\u627f java.lang.Throwable

compiler.err.icls.cant.have.static.decl=\
\u5185\u90e8\u7c7b\u4e0d\u80fd\u6709\u9759\u6001\u58f0\u660e
compiler.err.illegal.char=\
\u975e\u6cd5\u5b57\u7b26\uff1a \\{0}
compiler.err.illegal.char.for.encoding=\
\u7f16\u7801 {0} \u7684\u4e0d\u53ef\u6620\u5c04\u5b57\u7b26
compiler.err.illegal.combination.of.modifiers=\
\u975e\u6cd5\u7684\u4fee\u9970\u7b26\u7ec4\u5408\uff1a{0} \u548c {1}
compiler.err.illegal.enum.static.ref=\
\u521d\u59cb\u5316\u7a0b\u5e8f\u4e2d\u5bf9\u9759\u6001\u5b57\u6bb5\u7684\u5f15\u7528\u4e0d\u5408\u6cd5
compiler.err.illegal.esc.char=\
\u975e\u6cd5\u8f6c\u4e49\u5b57\u7b26
compiler.err.illegal.forward.ref=\
\u975e\u6cd5\u5411\u524d\u5f15\u7528
compiler.warn.forward.ref=\
    \u5148\u5f15\u7528\u53d8\u91cf''{0}''\uff0c\u7136\u540e\u518d\u5bf9\u5176\u521d\u59cb\u5316
compiler.err.illegal.generic.type.for.instof=\
instanceof \u7684\u6cdb\u578b\u7c7b\u578b\u4e0d\u5408\u6cd5
compiler.err.illegal.initializer.for.type=\
{0} \u7684\u521d\u59cb\u5316\u7a0b\u5e8f\u4e0d\u5408\u6cd5
compiler.err.illegal.line.end.in.char.lit=\
\u5b57\u7b26\u5b57\u9762\u503c\u7684\u884c\u7ed3\u5c3e\u4e0d\u5408\u6cd5
compiler.err.illegal.nonascii.digit=\
\u975e\u6cd5\u7684\u975e ASCII \u6570\u5b57
compiler.err.illegal.qual.not.icls=\
\u975e\u6cd5\u9650\u5b9a\u7b26\uff1b{0} \u4e0d\u662f\u5185\u90e8\u7c7b
compiler.err.illegal.start.of.expr=\
\u975e\u6cd5\u7684\u8868\u8fbe\u5f0f\u5f00\u59cb
compiler.err.illegal.start.of.type=\
\u975e\u6cd5\u7684\u7c7b\u578b\u5f00\u59cb
compiler.err.illegal.unicode.esc=\
\u975e\u6cd5\u7684 Unicode \u8f6c\u4e49
compiler.err.import.requires.canonical=\
\u5bfc\u5165\u9700\u8981 {0} \u7684\u89c4\u8303\u540d\u79f0
compiler.err.improperly.formed.type.param.missing=\
\u7c7b\u578b\u7684\u683c\u5f0f\u4e0d\u6b63\u786e\uff0c\u7f3a\u5c11\u67d0\u4e9b\u53c2\u6570
compiler.err.improperly.formed.type.inner.raw.param=\
\u7c7b\u578b\u7684\u683c\u5f0f\u4e0d\u6b63\u786e\uff0c\u7ed9\u51fa\u4e86\u666e\u901a\u7c7b\u578b\u7684\u7c7b\u578b\u53c2\u6570
compiler.err.incomparable.types=\
\u4e0d\u53ef\u6bd4\u8f83\u7684\u7c7b\u578b\uff1a{0} \u548c {1}
compiler.err.int.number.too.large=\
\u8fc7\u5927\u7684\u6574\u6570\uff1a {0}
compiler.err.internal.error.cant.instantiate=\
\u5185\u90e8\u9519\u8bef\uff1b\u65e0\u6cd5\u5c06\u4f4d\u4e8e {1} \u7684 {0} \u5b9e\u4f8b\u5316\u4e3a ({2})
compiler.err.intf.annotation.members.cant.have.params=\
@interface \u6210\u5458\u4e0d\u80fd\u5e26\u6709\u53c2\u6570
compiler.err.intf.annotation.cant.have.type.params=\
@interface \u4e0d\u80fd\u5e26\u6709\u7c7b\u578b\u53c2\u6570
compiler.err.intf.annotation.members.cant.have.type.params=\
@interface \u6210\u5458\u4e0d\u80fd\u5e26\u6709\u7c7b\u578b\u53c2\u6570
compiler.err.intf.annotation.member.clash=\
    @interface \u6210\u5458\u4e0e {1} \u4e2d\u7684\u65b9\u6cd5''{0}''\u51b2\u7a81
compiler.err.intf.expected.here=\
\u6b64\u5904\u9700\u8981\u63a5\u53e3
compiler.err.intf.meth.cant.have.body=\
\u63a5\u53e3\u65b9\u6cd5\u4e0d\u80fd\u5e26\u6709\u4e3b\u4f53
compiler.err.invalid.annotation.member.type=\
\u6ce8\u91ca\u6210\u5458\u7684\u7c7b\u578b\u65e0\u6548
compiler.err.invalid.hex.number=\
\u5341\u516d\u8fdb\u5236\u6570\u5b57\u5fc5\u987b\u5305\u542b\u81f3\u5c11\u4e00\u4f4d\u5341\u516d\u8fdb\u5236\u6570
compiler.err.invalid.meth.decl.ret.type.req=\
\u65b9\u6cd5\u58f0\u660e\u65e0\u6548\uff1b\u9700\u8981\u8fd4\u56de\u7c7b\u578b

compiler.err.label.already.in.use=\
\u6807\u7b7e {0} \u5df2\u4f7f\u7528
compiler.err.local.var.accessed.from.icls.needs.final=\
\u4ece\u5185\u90e8\u7c7b\u4e2d\u8bbf\u95ee\u5c40\u90e8\u53d8\u91cf {0}\uff1b\u9700\u8981\u88ab\u58f0\u660e\u4e3a\u6700\u7ec8\u7c7b\u578b
compiler.err.local.enum=\
\u679a\u4e3e\u7c7b\u578b\u4e0d\u80fd\u4e3a\u672c\u5730\u7c7b\u578b

#
# limits.  We don't give the limits in the diagnostic because we expect
# them to change, yet we want to use the same diagnostic.  These are all
# detected during code generation.
#
compiler.err.limit.code=\
\u4ee3\u7801\u8fc7\u957f
compiler.err.limit.code.too.large.for.try.stmt=\
try \u8bed\u53e5\u7684\u4ee3\u7801\u8fc7\u957f
compiler.err.limit.dimensions=\
\u6570\u7ec4\u7c7b\u578b\u7ef4\u6570\u8fc7\u591a
compiler.err.limit.locals=\
\u5c40\u90e8\u53d8\u91cf\u8fc7\u591a
compiler.err.limit.parameters=\
\u53c2\u6570\u8fc7\u591a
compiler.err.limit.pool=\
\u5e38\u91cf\u8fc7\u591a
compiler.err.limit.pool.in.class=\
\u7c7b {0} \u4e2d\u7684\u5e38\u91cf\u8fc7\u591a
compiler.err.limit.stack=\
\u4ee3\u7801\u9700\u8981\u8fc7\u591a\u5806\u6808
compiler.err.limit.string=\
\u5e38\u91cf\u5b57\u7b26\u4e32\u8fc7\u957f
compiler.err.limit.string.overflow=\
\u5bf9\u4e8e\u5e38\u91cf\u6c60\u6765\u8bf4\uff0c\u5b57\u7b26\u4e32 \"{0}...\" \u7684 UTF8 \u8868\u793a\u8fc7\u957f

compiler.err.malformed.fp.lit=\
\u6d6e\u70b9\u5b57\u9762\u503c\u4e0d\u89c4\u5219
compiler.err.method.does.not.override.superclass=\
    \u65b9\u6cd5\u4e0d\u4f1a\u8986\u76d6\u6216\u5b9e\u73b0\u8d85\u7c7b\u578b\u7684\u65b9\u6cd5
compiler.err.missing.meth.body.or.decl.abstract=\
\u7f3a\u5c11\u65b9\u6cd5\u4e3b\u4f53\uff0c\u6216\u58f0\u660e\u62bd\u8c61
compiler.err.missing.ret.stmt=\
\u7f3a\u5c11\u8fd4\u56de\u8bed\u53e5
compiler.err.missing.ret.val=\
\u7f3a\u5c11\u8fd4\u56de\u503c
compiler.err.mod.not.allowed.here=\
\u6b64\u5904\u4e0d\u5141\u8bb8\u4f7f\u7528\u4fee\u9970\u7b26 {0}
compiler.err.intf.not.allowed.here=\
\u6b64\u5904\u4e0d\u5141\u8bb8\u4f7f\u7528\u63a5\u53e3
compiler.err.enums.must.be.static=\
\u53ea\u6709\u5728\u9759\u6001\u4e0a\u4e0b\u6587\u4e2d\u624d\u5141\u8bb8\u4f7f\u7528\u679a\u4e3e\u58f0\u660e

compiler.err.name.clash.same.erasure=\
\u540d\u79f0\u51b2\u7a81\uff1a{0} \u548c {1} \u5177\u6709\u76f8\u540c\u7591\u7b26
compiler.err.name.clash.same.erasure.no.override=\
\u540d\u79f0\u51b2\u7a81\uff1a{1} \u4e2d\u7684 {0} \u548c {3} \u4e2d\u7684 {2} \u5177\u6709\u76f8\u540c\u7591\u7b26\uff0c\u4f46\u4e24\u8005\u5747\u4e0d\u8986\u76d6\u5bf9\u65b9
compiler.err.name.reserved.for.internal.use=\
{0} \u4e3a\u5185\u90e8\u4f7f\u7528\u4fdd\u7559
compiler.err.native.meth.cant.have.body=\
\u672c\u673a\u65b9\u6cd5\u4e0d\u80fd\u5e26\u6709\u4e3b\u4f53
compiler.err.neither.conditional.subtype=\
? \u7684\u4e0d\u517c\u5bb9\u7c7b\u578b\uff1a\u4e24\u8005\u90fd\u4e0d\u662f\u5bf9\u65b9\u7684\u5b50\u7c7b\u578b\n\
\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6570\uff1a {0}\n\
\u7b2c\u4e09\u4e2a\u64cd\u4f5c\u6570\uff1a {1}
compiler.err.new.not.allowed.in.annotation=\
\u6ce8\u91ca\u4e2d\u4e0d\u5141\u8bb8\u4f7f\u7528 "new"
compiler.err.no.annotation.member=\
{1} \u4e2d\u6ca1\u6709\u6ce8\u91ca\u6210\u5458 {0}
compiler.err.no.encl.instance.of.type.in.scope=\
\u4f5c\u7528\u57df\u4e2d\u6ca1\u6709\u7c7b\u578b\u4e3a {0} \u7684\u5c01\u95ed\u5b9e\u4f8b
compiler.err.no.intf.expected.here=\
\u6b64\u5904\u4e0d\u9700\u8981\u63a5\u53e3
compiler.err.no.match.entry=\
{0} \u5728 {1} \u7684\u6761\u76ee\u4e2d\u6ca1\u6709\u5339\u914d\u9879\uff1b\u9700\u8981 {2}
compiler.err.not.annotation.type=\
{0} \u4e0d\u662f\u6ce8\u91ca\u7c7b\u578b
compiler.err.not.def.access.class.intf.cant.access=\
{1} \u4e2d\u7684 {0} \u662f\u5728\u4e0d\u53ef\u8bbf\u95ee\u7684\u7c7b\u6216\u63a5\u53e3\u4e2d\u5b9a\u4e49\u7684
compiler.err.not.def.public.cant.access=\
{0} \u5728 {1} \u4e2d\u4e0d\u662f\u516c\u5171\u7684\uff1b\u65e0\u6cd5\u4ece\u5916\u90e8\u8f6f\u4ef6\u5305\u4e2d\u5bf9\u5176\u8fdb\u884c\u8bbf\u95ee
compiler.err.not.loop.label=\
\u4e0d\u662f loop \u6807\u7b7e\uff1a {0}
compiler.err.not.stmt=\
\u4e0d\u662f\u8bed\u53e5
compiler.err.not.encl.class=\
\u4e0d\u662f\u5c01\u95ed\u7c7b\uff1a {0}

compiler.err.operator.cant.be.applied=\
\u8fd0\u7b97\u7b26 {0} \u4e0d\u80fd\u5e94\u7528\u4e8e {1}

compiler.err.pkg.annotations.sb.in.package-info.java=\
\u8f6f\u4ef6\u5305\u6ce8\u91ca\u5e94\u5728\u6587\u4ef6 package-info.java \u4e2d
compiler.err.pkg.clashes.with.class.of.same.name=\
\u8f6f\u4ef6\u5305 {0} \u4e0e\u5e26\u6709\u76f8\u540c\u540d\u79f0\u7684\u7c7b\u51b2\u7a81

# Errors related to annotation processing

compiler.err.proc.cant.access=\
\u65e0\u6cd5\u8bbf\u95ee {0}\n\
{1}\n\
\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u4ee5\u4e0b\u5806\u6808\u8ffd\u8e2a\u3002\n\
{2}

compiler.err.proc.cant.find.class=\
\u627e\u4e0d\u5230\u201c{0}\u201d\u7684\u7c7b\u6587\u4ef6\u3002

# Print a client-generated error message; assumed to be localized, no translation required
compiler.err.proc.messager=\
    {0}

compiler.err.proc.no.explicit.annotation.processing.requested=\
\u4ec5\u5f53\u663e\u5f0f\u8bf7\u6c42\u6ce8\u91ca\u5904\u7406\u65f6\u624d\u63a5\u53d7\u7c7b\u540d\u79f0\u201c{0}\u201d

compiler.err.proc.processor.bad.option.name=\
    \u5904\u7406\u5668"{1}"\u63d0\u4f9b\u7684\u9009\u9879\u540d\u79f0"{0}"\u9519\u8bef

compiler.err.proc.processor.cant.instantiate=\
\u65e0\u6cd5\u5b9e\u4f8b\u5316\u5904\u7406\u7a0b\u5e8f\u201c{0}\u201d\u7684\u5b9e\u4f8b

compiler.err.proc.processor.constructor.error=\
\u6784\u9020\u5904\u7406\u7a0b\u5e8f\u5bf9\u8c61 {0} \u65f6\u629b\u51fa\u5f02\u5e38

compiler.err.proc.processor.not.found=\
\u672a\u627e\u5230\u6ce8\u91ca\u5904\u7406\u7a0b\u5e8f\u201c{0}\u201d

compiler.err.proc.processor.wrong.type=\
\u6ce8\u91ca\u5904\u7406\u7a0b\u5e8f\u201c{0}\u201d\u672a\u5b9e\u73b0 javax.annotation.processing.Processor

compiler.err.proc.bad.config.file=\
\u670d\u52a1\u914d\u7f6e\u6587\u4ef6\u4e0d\u6b63\u786e\uff0c\u6216\u6784\u9020\u5904\u7406\u7a0b\u5e8f\u5bf9\u8c61 {0} \u65f6\u629b\u51fa\u5f02\u5e38

compiler.err.proc.cant.create.loader=\
\u65e0\u6cd5\u4e3a\u6ce8\u91ca\u5904\u7406\u7a0b\u5e8f {0} \u521b\u5efa\u7c7b\u52a0\u8f7d\u5668

compiler.err.qualified.new.of.static.class=\
\u9650\u5b9a\u7684\u65b0\u9759\u6001\u7c7b

compiler.err.recursive.ctor.invocation=\
\u9012\u5f52\u6784\u9020\u51fd\u6570\u8c03\u7528
compiler.err.ref.ambiguous=\
\u5bf9 {0} \u7684\u5f15\u7528\u4e0d\u660e\u786e\uff0c{3} \u4e2d\u7684 {1} {2} \u548c {6} \u4e2d\u7684 {4} {5} \u90fd\u5339\u914d
compiler.err.repeated.annotation.target=\
\u6ce8\u91ca\u76ee\u6807\u91cd\u590d
compiler.err.repeated.interface=\
\u63a5\u53e3\u91cd\u590d
compiler.err.repeated.modifier=\
\u4fee\u9970\u7b26\u91cd\u590d
compiler.err.report.access=\
{0} \u53ef\u4ee5\u5728 {2} \u4e2d\u8bbf\u95ee {1}
compiler.err.ret.outside.meth=\
\u8fd4\u56de\u5916\u90e8\u65b9\u6cd5

compiler.err.signature.doesnt.match.supertype=\
\u7b7e\u540d\u4e0e {0} \u4e0d\u5339\u914d\uff1b\u4e0d\u517c\u5bb9\u7684\u7236\u7c7b\u578b
compiler.err.signature.doesnt.match.intf=\
\u7b7e\u540d\u4e0e {0} \u4e0d\u5339\u914d\uff1b\u4e0d\u517c\u5bb9\u7684\u63a5\u53e3
compiler.err.does.not.override.abstract=\
{0} \u4e0d\u662f\u62bd\u8c61\u7684\uff0c\u5e76\u4e14\u672a\u8986\u76d6 {2} \u4e2d\u7684\u62bd\u8c61\u65b9\u6cd5 {1}
compiler.err.source.cant.overwrite.input.file=\
\u5199\u5165\u6e90\u65f6\u51fa\u9519\uff1b\u65e0\u6cd5\u8986\u5199\u8f93\u5165\u6587\u4ef6 {0}
compiler.err.stack.sim.error=\
\u5185\u90e8\u9519\u8bef\uff1a{0} \u4e2d\u7684\u5806\u6808 sim \u9519\u8bef
compiler.err.static.imp.only.classes.and.interfaces=\
\u4ec5\u4ece\u7c7b\u548c\u63a5\u53e3\u9759\u6001\u5bfc\u5165
compiler.err.synthetic.name.conflict=\
\u7b26\u53f7 {0} \u4e0e {1} \u4e2d\u7684 compiler-synthesized \u7b26\u53f7\u51b2\u7a81

compiler.err.throws.not.allowed.in.intf.annotation=\
@interface \u6210\u5458\u4e2d\u4e0d\u5141\u8bb8\u4f7f\u7528 throws \u5b50\u53e5
compiler.err.try.without.catch.or.finally=\
"try" \u4e0d\u5e26\u6709 "catch" \u6216 "finally"
compiler.err.type.doesnt.take.params=\
\u7c7b\u578b {0} \u4e0d\u5e26\u6709\u53c2\u6570
compiler.err.type.var.cant.be.deref=\
\u65e0\u6cd5\u4ece\u7c7b\u578b\u53d8\u91cf\u4e2d\u8fdb\u884c\u9009\u62e9
compiler.err.type.var.may.not.be.followed.by.other.bounds=\
\u7c7b\u578b\u53d8\u91cf\u540e\u9762\u4e0d\u80fd\u5e26\u6709\u5176\u4ed6\u9650\u5236\u8303\u56f4
compiler.err.type.var.more.than.once=\
\u7c7b\u578b\u53d8\u91cf {0} \u5728 {1} \u7684\u7ed3\u679c\u7c7b\u578b\u4e2d\u591a\u6b21\u51fa\u73b0\uff1b\u5fc5\u987b\u5bf9\u5176\u8fdb\u884c\u5b9e\u4f8b\u5316
compiler.err.type.var.more.than.once.in.result=\
\u7c7b\u578b\u53d8\u91cf {0} \u5728 {1} \u7684\u7c7b\u578b\u4e2d\u591a\u6b21\u51fa\u73b0\uff1b\u5fc5\u987b\u5bf9\u5176\u8fdb\u884c\u5b9e\u4f8b\u5316
compiler.err.types.incompatible.diff.ret=\
\u7c7b\u578b {0} \u548c {1} \u4e0d\u517c\u5bb9\uff1b\u4e24\u8005\u90fd\u5b9a\u4e49\u4e86 {2}\uff0c\u4f46\u5374\u5e26\u6709\u4e0d\u76f8\u5173\u7684\u8fd4\u56de\u7c7b\u578b

compiler.err.unclosed.char.lit=\
\u672a\u7ed3\u675f\u7684\u5b57\u7b26\u5b57\u9762\u503c
compiler.err.unclosed.comment=\
\u672a\u7ed3\u675f\u7684\u6ce8\u91ca
compiler.err.unclosed.str.lit=\
\u672a\u7ed3\u675f\u7684\u5b57\u7b26\u4e32\u5b57\u9762\u503c
compiler.err.unknown.enum.constant=\
\u5728\u7c7b\u6587\u4ef6 {0} \u4e2d\uff1a\u672a\u77e5\u7684\u679a\u4e3e\u5e38\u91cf {1}.{2}
compiler.err.unsupported.encoding=\
\u4e0d\u652f\u6301\u7684\u7f16\u7801\uff1a {0}
compiler.err.io.exception=\
\u8bfb\u53d6\u6e90\u6587\u4ef6\u65f6\u51fa\u9519\uff1a {0}
compiler.err.undef.label=\
\u672a\u5b9a\u4e49\u7684\u6807\u7b7e\uff1a {0}
compiler.err.undetermined.type=\
\u65e0\u6cd5\u786e\u5b9a {0} \u7684\u7c7b\u578b\u53c2\u6570
compiler.err.undetermined.type.1=\
\u65e0\u6cd5\u786e\u5b9a {0} \u7684\u7c7b\u578b\u53c2\u6570\uff1b{1}
compiler.err.unreachable.stmt=\
\u65e0\u6cd5\u8bbf\u95ee\u7684\u8bed\u53e5
compiler.err.initializer.must.be.able.to.complete.normally=\
\u521d\u59cb\u5316\u7a0b\u5e8f\u5fc5\u987b\u80fd\u591f\u6b63\u5e38\u5b8c\u6210
compiler.err.unreported.exception.need.to.catch.or.throw=\
\u672a\u62a5\u544a\u7684\u5f02\u5e38 {0}\uff1b\u5fc5\u987b\u5bf9\u5176\u8fdb\u884c\u6355\u6349\u6216\u58f0\u660e\u4ee5\u4fbf\u629b\u51fa
compiler.err.unreported.exception.default.constructor=\
\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u4e2d\u672a\u62a5\u544a\u7684\u5f02\u5e38 {0}
compiler.err.unsupported.cross.fp.lit=\
\u8be5 VM \u4e0d\u652f\u6301\u5341\u516d\u8fdb\u5236\u6d6e\u70b9\u5b57\u9762\u503c
compiler.err.void.not.allowed.here=\
\u6b64\u5904\u4e0d\u5141\u8bb8\u4f7f\u7528 "void" \u7c7b\u578b

compiler.err.wrong.number.type.args=\
\u7c7b\u578b\u53d8\u91cf\u6570\u76ee\u9519\u8bef\uff1b\u9700\u8981 {0}

compiler.err.var.might.already.be.assigned=\
\u53ef\u80fd\u5df2\u6307\u5b9a\u53d8\u91cf {0}
compiler.err.var.might.not.have.been.initialized=\
\u53ef\u80fd\u5c1a\u672a\u521d\u59cb\u5316\u53d8\u91cf {0}
compiler.err.var.might.be.assigned.in.loop=\
\u53ef\u80fd\u5728 loop \u4e2d\u6307\u5b9a\u4e86\u53d8\u91cf {0}

# In the following string, {1} will always be the detail message from
# java.io.IOException.
compiler.err.class.cant.write=\
\u5199\u5165 {0} \u65f6\u51fa\u9519\uff1a {1}

# In the following string, {0} is the name of the class in the Java source.
# It really should be used two times..
compiler.err.class.public.should.be.in.file=\
\u7c7b {0} \u662f\u516c\u5171\u7684\uff0c\u5e94\u5728\u540d\u4e3a {0}.java \u7684\u6587\u4ef6\u4e2d\u58f0\u660e

## All errors which do not refer to a particular line in the source code are
## preceded by this string.
compiler.err.error=\
\u9519\u8bef\uff1a

# The following error messages do not refer to a line in the source code.
compiler.err.cant.read.file=\
\u65e0\u6cd5\u8bfb\u53d6\uff1a {0}

#####

# Fatal Errors

compiler.misc.fatal.err.no.java.lang=\
\u81f4\u547d\u9519\u8bef\uff1a\u5728\u7c7b\u8def\u5f84\u6216\u5f15\u5bfc\u7c7b\u8def\u5f84\u4e2d\u627e\u4e0d\u5230\u8f6f\u4ef6\u5305 java.lang
compiler.misc.fatal.err.cant.locate.meth=\
\u81f4\u547d\u9519\u8bef\uff1a\u627e\u4e0d\u5230\u65b9\u6cd5 {0}
compiler.misc.fatal.err.cant.locate.field=\
\u81f4\u547d\u9519\u8bef\uff1a\u627e\u4e0d\u5230\u5b57\u6bb5 {0}
compiler.misc.fatal.err.cant.locate.ctor=\
\u81f4\u547d\u9519\u8bef\uff1a\u627e\u4e0d\u5230 {0} \u7684\u6784\u9020\u51fd\u6570

#####

##
## miscellaneous strings
##

compiler.misc.source.unavailable=\
\uff08\u6e90\u4e0d\u53ef\u7528\uff09
compiler.misc.base.membership=\
\u60a8\u7684\u6240\u6709\u57fa\u7c7b\u90fd\u5c5e\u4e8e\u6211\u4eec
compiler.misc.x.print.processor.info=\
    \u5904\u7406\u7a0b\u5e8f {0} \u4e0e {1} \u5339\u914d\u5e76\u8fd4\u56de {2}\u3002
compiler.misc.x.print.rounds=\
    \u5faa\u73af {0}:\n\t\u8f93\u5165\u6587\u4ef6: {1}\n\t\u6ce8\u91ca: {2}\n\t\u6700\u540e\u4e00\u4e2a\u5faa\u73af: {3}

#####

## The following string will appear before all messages keyed as:
## "compiler.note".
compiler.note.note=\
\u6ce8\u610f\uff1a

compiler.note.deprecated.filename=\
{0} \u4f7f\u7528\u6216\u8986\u76d6\u4e86\u5df2\u8fc7\u65f6\u7684 API\u3002
compiler.note.deprecated.plural=\
\u67d0\u4e9b\u8f93\u5165\u6587\u4ef6\u4f7f\u7528\u6216\u8986\u76d6\u4e86\u5df2\u8fc7\u65f6\u7684 API\u3002
# The following string may appear after one of the above deprecation
# messages.
compiler.note.deprecated.recompile=\
\u8981\u4e86\u89e3\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u4f7f\u7528 -Xlint:deprecation \u91cd\u65b0\u7f16\u8bd1\u3002

compiler.note.deprecated.filename.additional=\
{0} \u8fd8\u4f7f\u7528\u6216\u8986\u76d6\u4e86\u5df2\u8fc7\u65f6\u7684 API\u3002
compiler.note.deprecated.plural.additional=\
\u67d0\u4e9b\u8f93\u5165\u6587\u4ef6\u8fd8\u4f7f\u7528\u6216\u8986\u76d6\u4e86\u5df2\u8fc7\u65f6\u7684 API\u3002

# Notes related to annotation processing

# Print a client-generated note; assumed to be localized, no translation required
compiler.note.proc.messager=\
    {0}

compiler.note.unchecked.filename=\
{0} \u4f7f\u7528\u4e86\u672a\u7ecf\u68c0\u67e5\u6216\u4e0d\u5b89\u5168\u7684\u64cd\u4f5c\u3002
compiler.note.unchecked.plural=\
\u67d0\u4e9b\u8f93\u5165\u6587\u4ef6\u4f7f\u7528\u4e86\u672a\u7ecf\u68c0\u67e5\u6216\u4e0d\u5b89\u5168\u7684\u64cd\u4f5c\u3002
# The following string may appear after one of the above deprecation
# messages.
compiler.note.unchecked.recompile=\
\u8981\u4e86\u89e3\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u4f7f\u7528 -Xlint:unchecked \u91cd\u65b0\u7f16\u8bd1\u3002

compiler.note.unchecked.filename.additional=\
{0} \u8fd8\u6709\u672a\u7ecf\u68c0\u67e5\u6216\u4e0d\u5b89\u5168\u7684\u64cd\u4f5c\u3002
compiler.note.unchecked.plural.additional=\
\u67d0\u4e9b\u8f93\u5165\u6587\u4ef6\u8fd8\u4f7f\u7528\u4e86\u672a\u7ecf\u68c0\u67e5\u6216\u4e0d\u5b89\u5168\u7684\u64cd\u4f5c\u3002

#####

compiler.misc.count.error=\
{0} \u9519\u8bef
compiler.misc.count.error.plural=\
{0} \u9519\u8bef
compiler.misc.count.warn=\
{0} \u8b66\u544a
compiler.misc.count.warn.plural=\
{0} \u8b66\u544a

## extra output when using -verbose (JavaCompiler)

compiler.misc.verbose.checking.attribution=\
[\u6b63\u5728\u68c0\u67e5 {0}]
compiler.misc.verbose.parsing.done=\
[\u89e3\u6790\u5df2\u5b8c\u6210\u65f6\u95f4 {0}ms]
compiler.misc.verbose.parsing.started=\
[\u89e3\u6790\u5f00\u59cb\u65f6\u95f4 {0}]
compiler.misc.verbose.total=\
[\u603b\u65f6\u95f4 {0}ms]
compiler.misc.verbose.wrote.file=\
[\u5df2\u5199\u5165 {0}]

## extra output when using -verbose (Retro)
compiler.misc.verbose.retro=\
[\u6b63\u5728\u66f4\u65b0 {0}]
compiler.misc.verbose.retro.with=\
\u6b63\u5728\u4f7f\u7528 {1} \u66f4\u65b0 {0}
compiler.misc.verbose.retro.with.list=\
\u6b63\u5728\u4f7f\u7528\u7c7b\u578b\u53c2\u6570 {1}\u3001\u7236\u7c7b\u578b {2} \u548c\u63a5\u53e3 {3} \u66f4\u65b0 {0}

## extra output when using -verbose (code/ClassReader)
compiler.misc.verbose.loading=\
[\u6b63\u5728\u88c5\u5165 {0}]

compiler.misc.verbose.sourcepath=\
[\u6e90\u6587\u4ef6\u7684\u641c\u7d22\u8def\u5f84\uff1a {0}]

compiler.misc.verbose.classpath=\
[\u7c7b\u6587\u4ef6\u7684\u641c\u7d22\u8def\u5f84\uff1a {0}]

## extra output when using -checkclassfile (code/ClassReader)
compiler.misc.ccf.found.later.version=\
\u7c7b\u6587\u4ef6\u7684\u7248\u672c\u9ad8\u4e8e\u9884\u671f\uff1a {0}
compiler.misc.ccf.unrecognized.attribute=\
\u65e0\u6cd5\u8bc6\u522b\u7684\u5c5e\u6027\uff1a {0}

## extra output when using -prompt (util/Log)
compiler.misc.resume.abort=\
\u7ee7\u7eed(&R), \u653e\u5f03(&A)>

#####

##
## warnings
##

## All warning messages are preceded by the following string.
compiler.warn.warning=\
\u8b66\u544a\uff1a

compiler.warn.constant.SVUID=\
[serial] \u5728\u7c7b {0} \u4e2d serialVersionUID \u5fc5\u987b\u4e3a\u5e38\u91cf

compiler.warn.dir.path.element.not.found=\
[path] \u9519\u8bef\u7684\u8def\u5f84\u5143\u7d20 "{0}"\uff1a\u65e0\u6b64\u76ee\u5f55

compiler.warn.finally.cannot.complete=\
[finally] \u65e0\u6cd5\u6b63\u5e38\u5b8c\u6210 finally \u5b50\u53e5

compiler.warn.has.been.deprecated=\
[deprecation] {1} \u4e2d\u7684 {0} \u5df2\u8fc7\u65f6

compiler.warn.illegal.char.for.encoding=\
\u7f16\u7801 {0} \u7684\u4e0d\u53ef\u6620\u5c04\u5b57\u7b26
compiler.warn.improper.SVUID=\
[serial] \u5728\u7c7b {0} \u4e2d\u5fc5\u987b\u5c06 serialVersionUID \u58f0\u660e\u4e3a\u9759\u6001\u6700\u7ec8\u7c7b\u578b

compiler.warn.inexact.non-varargs.call=\
\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u4f7f\u7528\u4e86\u4e0d\u51c6\u786e\u7684\u53d8\u91cf\u7c7b\u578b\u7684 varargs \u65b9\u6cd5\u7684\u975e varargs \u8c03\u7528\uff1b\n\
\u5bf9\u4e8e varargs \u8c03\u7528\uff0c\u5e94\u4f7f\u7528 {0}\n\
\u5bf9\u4e8e\u975e varargs \u8c03\u7528\uff0c\u5e94\u4f7f\u7528 {1}\uff0c\u8fd9\u6837\u4e5f\u53ef\u4ee5\u6291\u5236\u6b64\u8b66\u544a

compiler.warn.long.SVUID=\
[serial] \u5728\u7c7b {0} \u4e2d serialVersionUID \u5fc5\u987b\u4e3a\u957f\u6574\u578b

compiler.warn.missing.SVUID=\
[serial] \u53ef\u5e8f\u5217\u5316\u7c7b {0} \u4e2d\u6ca1\u6709 serialVersionUID \u7684\u5b9a\u4e49

compiler.warn.override.varargs.missing=\
{0}\uff1b\u88ab\u8986\u76d6\u7684\u65b9\u6cd5\u6ca1\u6709 "..."
compiler.warn.override.varargs.extra=\
{0}\uff1b\u8986\u76d6\u7684\u65b9\u6cd5\u7f3a\u5c11 "..."
compiler.warn.override.bridge=\
{0}\uff1b\u88ab\u8986\u76d6\u7684\u65b9\u6cd5\u4e3a bridge \u65b9\u6cd5

compiler.warn.pkg-info.already.seen=\
[package-info] \u5df2\u627e\u5230\u8f6f\u4ef6\u5305 {0} \u7684 package-info.java \u6587\u4ef6
compiler.warn.path.element.not.found=\
[path] \u9519\u8bef\u7684\u8def\u5f84\u5143\u7d20 "{0}"\uff1a\u65e0\u6b64\u6587\u4ef6\u6216\u76ee\u5f55
compiler.warn.possible.fall-through.into.case=\
[fallthrough] \u53ef\u80fd\u65e0\u6cd5\u5b9e\u73b0 case

compiler.warn.redundant.cast=\
[\u8f6c\u6362] \u5411 {0} \u8f6c\u6362\u51fa\u73b0\u5197\u4f59

compiler.warn.position.overflow=\
\u884c {0} \u5904\u7684\u4f4d\u7f6e\u7f16\u7801\u6ea2\u51fa

compiler.warn.big.major.version=\
{0}: \u4e3b\u7248\u672c {1} \u6bd4 {2} \u65b0\uff0c\u6b64\u7f16\u8bd1\u5668\u652f\u6301\u6700\u65b0\u7684\u4e3b\u7248\u672c\u3002\n\
\u5efa\u8bae\u5347\u7ea7\u6b64\u7f16\u8bd1\u5668\u3002

# Warnings related to annotation processing
compiler.warn.proc.package.does.not.exist=\
    \u8f6f\u4ef6\u5305 {0} \u4e0d\u5b58\u5728
compiler.warn.proc.file.reopening=\
\u5c1d\u8bd5\u591a\u6b21\u4e3a\u201c{0}\u201d\u521b\u5efa\u6587\u4ef6

compiler.warn.proc.type.already.exists=\
    \u5177\u6709\u7c7b\u578b''{0}''\u7684\u6587\u4ef6\u5df2\u7ecf\u5b58\u5728\u4e8e\u6e90\u8def\u5f84\u6216\u7c7b\u8def\u5f84\u4e2d

compiler.warn.proc.type.recreate=\
\u5c1d\u8bd5\u591a\u6b21\u521b\u5efa\u5177\u6709\u7c7b\u578b\u201c{0}\u201d\u7684\u6587\u4ef6

compiler.warn.proc.illegal.file.name=\
\u65e0\u6cd5\u521b\u5efa\u5e26\u6709\u975e\u6cd5\u540d\u79f0\u201c{0}\u201d\u7684\u6587\u4ef6\u3002

compiler.warn.proc.file.create.last.round=\
\u5c06\u4e0d\u5bf9\u5728\u6700\u540e\u4e00\u4e2a\u5faa\u73af\u4e2d\u521b\u5efa\u7684\u7c7b\u578b\u4e3a\u201c{0}\u201d\u7684\u6587\u4ef6\u8fdb\u884c\u6ce8\u91ca\u5904\u7406\u3002

compiler.warn.proc.malformed.supported.string=\
\u5904\u7406\u7a0b\u5e8f\u201c{1}\u201d\u4e3a\u652f\u6301\u7684\u6ce8\u91ca\u7c7b\u578b\u8fd4\u56de\u4e0d\u89c4\u5219\u7684\u5b57\u7b26\u4e32\u201c{0}\u201d

compiler.warn.proc.annotations.without.processors=\
    \u6ca1\u6709\u5904\u7406\u7a0b\u5e8f\u8981\u4f7f\u7528\u4ee5\u4e0b\u4efb\u4f55\u6ce8\u91ca: {0}

compiler.warn.proc.processor.incompatible.source.version=\
    \u6765\u81ea\u6ce8\u91ca\u5904\u7406\u5668"{1}"\u7684\u53d7\u652f\u6301 source \u7248\u672c"{0}"\u4f4e\u4e8e -source"{2}"

compiler.warn.proc.proc-only.requested.no.procs=\
\u5728\u672a\u8bf7\u6c42\u7f16\u8bd1\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u6ce8\u91ca\u5904\u7406\uff0c\u4f46\u672a\u627e\u5230\u5904\u7406\u7a0b\u5e8f\u3002

compiler.warn.proc.use.implicit=\
\u6ce8\u91ca\u5904\u7406\u4e0d\u9002\u7528\u4e8e\u9690\u5f0f\u7f16\u8bd1\u7684\u6587\u4ef6\u3002\n\
\u4f7f\u7528 -implicit \u6307\u5b9a\u7528\u4e8e\u9690\u5f0f\u7f16\u8bd1\u7684\u7b56\u7565\u3002

compiler.warn.proc.use.proc.or.implicit=\
\u6ce8\u91ca\u5904\u7406\u4e0d\u9002\u7528\u4e8e\u9690\u5f0f\u7f16\u8bd1\u7684\u6587\u4ef6\u3002\n\
\u4f7f\u7528 -proc:none \u7981\u7528\u6ce8\u91ca\u5904\u7406\u6216\u4f7f\u7528 -implicit \u6307\u5b9a\u7528\u4e8e\u9690\u5f0f\u7f16\u8bd1\u7684\u7b56\u7565\u3002

# Print a client-generated warning; assumed to be localized, no translation required
compiler.warn.proc.messager=\
    {0}

compiler.warn.proc.unclosed.type.files=\
\u7c7b\u578b\u4e3a\u201c{0}\u201d\u7684\u6587\u4ef6\u672a\u5173\u95ed\uff1b\u5c06\u4e0d\u9488\u5bf9\u8fd9\u4e9b\u7c7b\u578b\u8fdb\u884c\u6ce8\u91ca\u5904\u7406

compiler.warn.proc.unmatched.processor.options=\
    \u4ee5\u4e0b\u9009\u9879\u672a\u88ab\u4efb\u4f55\u5904\u7406\u5668\u8bc6\u522b\uff1a"{0}"

compiler.warn.unchecked.assign=\
[unchecked] \u672a\u7ecf\u68c0\u67e5\u7684\u6307\u5b9a\uff1a\u5c06 {0} \u6307\u5b9a\u7ed9 {1}
compiler.warn.unchecked.assign.to.var=\
[unchecked] \u5bf9\u4f5c\u4e3a\u666e\u901a\u7c7b\u578b {1} \u7684\u6210\u5458\u7684\u53d8\u91cf {0} \u7684\u6307\u5b9a\u672a\u7ecf\u68c0\u67e5
compiler.warn.unchecked.call.mbr.of.raw.type=\
[unchecked] \u5bf9\u4f5c\u4e3a\u666e\u901a\u7c7b\u578b {1} \u7684\u6210\u5458\u7684 {0} \u7684\u8c03\u7528\u672a\u7ecf\u68c0\u67e5
compiler.warn.unchecked.cast.to.type=\
[unchecked] \u5bf9\u7c7b\u578b {0} \u7684\u4f7f\u7528\u672a\u7ecf\u68c0\u67e5
compiler.warn.unchecked.meth.invocation.applied=\
[unchecked] \u65b9\u6cd5\u8c03\u7528\u672a\u7ecf\u68c0\u67e5\uff1a{1} \u4e2d\u7684 {0} \u88ab\u5e94\u7528\u4e8e {2}({3})
compiler.warn.unchecked.generic.array.creation=\
[unchecked] \u5bf9\u4e8e varargs \u53c2\u6570\uff0c\u7c7b\u578b {0} \u7684\u6cdb\u578b\u6570\u7ec4\u521b\u5efa\u672a\u7ecf\u68c0\u67e5

compiler.warn.missing.deprecated.annotation=\
[dep-ann] \u672a\u4f7f\u7528 @Deprecated \u5bf9\u5df2\u8fc7\u65f6\u7684\u9879\u76ee\u8fdb\u884c\u6ce8\u91ca

compiler.warn.invalid.archive.file=\
[path] \u4ee5\u4e0b\u8def\u5f84\u4e2d\u5b58\u5728\u610f\u5916\u7684\u6587\u4ef6: {0}

compiler.warn.unexpected.archive.file=\
[path] \u4ee5\u4e0b\u5f52\u6863\u6587\u4ef6\u5b58\u5728\u610f\u5916\u7684\u6269\u5c55\u540d: {0}

compiler.warn.div.zero=\
[divzero] \u9664\u6570\u4e3a\u96f6

compiler.warn.empty.if=\
[\u7a7a] if \u4e4b\u540e\u6ca1\u6709\u8bed\u53e5

compiler.warn.annotation.method.not.found=\
\u65e0\u6cd5\u627e\u5230\u7c7b\u578b\u4e3a\u201c{0}\u201d\u7684\u6ce8\u91ca\u65b9\u6cd5\u201c{1}()\u201d

compiler.warn.annotation.method.not.found.reason=\
\u65e0\u6cd5\u627e\u5230\u7c7b\u578b\u4e3a\u201c{0}\u201d\u7684\u6ce8\u91ca\u65b9\u6cd5\u201c{1}()\u201d: {2}

#####

## The following are tokens which are non-terminals in the language. They should
## be named as JLS3 calls them when translated to the appropriate language.
compiler.misc.token.identifier=\
<\u6807\u8bc6\u7b26>
compiler.misc.token.character=\
<\u5b57\u7b26>
compiler.misc.token.string=\
<\u5b57\u7b26\u4e32>
compiler.misc.token.integer=\
<\u6574\u578b>
compiler.misc.token.long-integer=\
<\u957f\u6574\u578b>
compiler.misc.token.float=\
<\u6d6e\u70b9\u578b>
compiler.misc.token.double=\
<\u53cc\u7cbe\u5ea6\u578b>
compiler.misc.token.bad-symbol=\
<\u9519\u8bef\u7b26\u53f7>
compiler.misc.token.end-of-input=\
<\u8f93\u5165\u7ed3\u675f>

## The argument to the following string will always be one of the following:
## 1. one of the above non-terminals
## 2. a keyword (JLS1.8)
## 3. a boolean literal (JLS3.10.3)
## 4. the null literal (JLS3.10.7)
## 5. a Java separator (JLS3.11)
## 6. an operator (JLS3.12)
##
## This is the only place these tokens will be used.
compiler.err.expected=\
\u9700\u8981 {0}
compiler.err.expected2=\
\u9700\u8981\u4e3a {0} \u6216 {1}
compiler.err.expected3=\
\u9700\u8981\u4e3a {0}\u3001{1} \u6216 {2}

compiler.err.premature.eof=\
\u8fdb\u884c\u8bed\u6cd5\u89e3\u6790\u65f6\u5df2\u5230\u8fbe\u6587\u4ef6\u7ed3\u5c3e

## The following are related in form, but do not easily fit the above paradigm.
compiler.err.dot.class.expected=\
\u9700\u8981 ".class"

## The argument to this string will always be either 'case' or 'default'.
compiler.err.orphaned=\
\u5355\u4e2a {0}\uff1a

compiler.misc.anonymous.class=\
<\u533f\u540d {0}>

#####

compiler.err.cant.access=\
\u65e0\u6cd5\u8bbf\u95ee {0}\n\
{1}

compiler.misc.bad.class.file.header=\
\u9519\u8bef\u7684\u7c7b\u6587\u4ef6\uff1a {0}\n\
{1}\n\
\u8bf7\u5220\u9664\u8be5\u6587\u4ef6\u6216\u786e\u4fdd\u8be5\u6587\u4ef6\u4f4d\u4e8e\u6b63\u786e\u7684\u7c7b\u8def\u5f84\u5b50\u76ee\u5f55\u4e2d\u3002

## The following are all possible strings for the second argument ({1}) of the
## above strings.
compiler.misc.bad.class.signature=\
\u9519\u8bef\u7684\u7c7b\u7b7e\u540d\uff1a {0}
compiler.misc.bad.enclosing.method=\
\u95ed\u5408\u65b9\u6cd5\u5c5e\u6027 {0} \u65f6\u51fa\u9519
compiler.misc.bad.runtime.invisible.param.annotations=\
    RuntimeInvisibleParameterAnnotations \u5c5e\u6027\u9519\u8bef: {0}
compiler.misc.bad.const.pool.tag=\
\u9519\u8bef\u7684\u5e38\u91cf\u6c60\u6807\u8bb0\uff1a {0}
compiler.misc.bad.const.pool.tag.at=\
\u9519\u8bef\u7684\u5e38\u91cf\u6c60\u6807\u8bb0\uff1a{0}\uff0c\u4f4d\u4e8e {1}
compiler.misc.bad.signature=\
\u9519\u8bef\u7684\u7b7e\u540d\uff1a {0}
compiler.misc.class.file.wrong.class=\
\u7c7b\u6587\u4ef6\u5305\u542b\u9519\u8bef\u7684\u7c7b\uff1a {0}
compiler.misc.class.file.not.found=\
\u672a\u627e\u5230 {0} \u7684\u7c7b\u6587\u4ef6
compiler.misc.file.doesnt.contain.class=\
\u6587\u4ef6\u4e0d\u5305\u542b\u7c7b {0}
compiler.misc.file.does.not.contain.package=\
    \u6587\u4ef6\u4e0d\u5305\u542b\u8f6f\u4ef6\u5305 {0}
compiler.misc.illegal.start.of.class.file=\
\u975e\u6cd5\u7684\u7c7b\u6587\u4ef6\u5f00\u59cb
compiler.misc.unable.to.access.file=\
\u65e0\u6cd5\u8bbf\u95ee\u6587\u4ef6\uff1a {0}
compiler.misc.unicode.str.not.supported=\
\u4e0d\u652f\u6301\u7c7b\u6587\u4ef6\u4e2d\u7684 Unicode \u5b57\u7b26\u4e32
compiler.misc.undecl.type.var=\
\u672a\u58f0\u660e\u7684\u7c7b\u578b\u53d8\u91cf\uff1a {0}
compiler.misc.wrong.version=\
\u7c7b\u6587\u4ef6\u5177\u6709\u9519\u8bef\u7684\u7248\u672c {0}.{1}\uff0c\u5e94\u4e3a {2}.{3}

#####

compiler.err.not.within.bounds=\
\u7c7b\u578b\u53c2\u6570 {0} \u4e0d\u5728\u5176\u9650\u5236\u8303\u56f4\u4e4b\u5185

compiler.err.not.within.bounds.explain=\
\u7c7b\u578b\u53c2\u6570 {0} \u4e0d\u5728\u5176\u9650\u5236\u8303\u56f4\u4e4b\u5185\uff1b{1}

## The following are all possible strings for the second argument ({1}) of the
## above string.

## none yet...

#####

compiler.err.prob.found.req=\
{0}\n\
\u627e\u5230\uff1a {1}\n\
\u9700\u8981\uff1a {2}
compiler.warn.prob.found.req=\
{0}\n\
\u627e\u5230\uff1a {1}\n\
\u9700\u8981\uff1a {2}
compiler.err.prob.found.req.1=\
{0} {3}\n\
\u627e\u5230\uff1a {1}\n\
\u9700\u8981\uff1a {2}

## The following are all possible strings for the first argument ({0}) of the
## above strings.
compiler.misc.incompatible.types=\
\u4e0d\u517c\u5bb9\u7684\u7c7b\u578b
compiler.misc.incompatible.types.1=\
\u4e0d\u517c\u5bb9\u7684\u7c7b\u578b\uff1b{0}
compiler.misc.inconvertible.types=\
\u4e0d\u53ef\u8f6c\u6362\u7684\u7c7b\u578b
compiler.misc.possible.loss.of.precision=\
\u53ef\u80fd\u635f\u5931\u7cbe\u5ea6

compiler.misc.unchecked.assign=\
[unchecked] \u672a\u7ecf\u68c0\u67e5\u7684\u8f6c\u6362
# compiler.misc.storecheck=\
#     [unchecked] assignment might cause later store checks to fail
# compiler.misc.unchecked=\
#     [unchecked] assigned array cannot dynamically check its stores
compiler.misc.unchecked.cast.to.type=\
[unchecked] \u672a\u7ecf\u68c0\u67e5\u7684\u7c7b\u578b\u4f7f\u7528

compiler.misc.assignment.from.super-bound=\
\u4ece super-bound \u7c7b\u578b {0} \u6307\u5b9a
compiler.misc.assignment.to.extends-bound=\
\u5bf9 extends-bound \u7c7b\u578b {0} \u8fdb\u884c\u6307\u5b9a
# compiler.err.star.expected=\
#     ''*'' expected
# compiler.err.no.elem.type=\
#     \[\*\] cannot have a type

#####

compiler.err.type.found.req=\
\u610f\u5916\u7684\u7c7b\u578b\n\
\u627e\u5230\uff1a {0}\n\
\u9700\u8981\uff1a {1}

## The following are all possible strings for the first argument ({0}) of the
## above string.
compiler.misc.type.req.class=\
\u7c7b
compiler.misc.type.req.class.array=\
\u7c7b\u6216\u6570\u7ec4
compiler.misc.type.req.ref=\
\u5f15\u7528
compiler.misc.type.req.exact=\
\u4e0d\u5e26\u9650\u5236\u8303\u56f4\u7684\u7c7b\u6216\u63a5\u53e3
compiler.misc.type.parameter=\
\u7c7b\u578b\u53c2\u6570 {0} 

#####

## The following are all possible strings for the last argument of all those
## diagnostics whose key ends in ".1"
compiler.misc.undetermined.type=\
\u672a\u786e\u5b9a\u7684\u7c7b\u578b
ncompiler.misc.type.variable.has.undetermined.type=\
\u7c7b\u578b\u53d8\u91cf {0} \u5e26\u6709\u672a\u786e\u5b9a\u7684\u7c7b\u578b
compiler.misc.no.unique.maximal.instance.exists=\
\u5bf9\u4e8e\u4e0a\u9650\u4e3a {1} \u7684\u7c7b\u578b\u53d8\u91cf {0}\uff0c\u4e0d\u5b58\u5728\u552f\u4e00\u6700\u5927\u5b9e\u4f8b
compiler.misc.no.unique.minimal.instance.exists=\
\u5bf9\u4e8e\u4e0b\u9650\u4e3a {1} \u7684\u7c7b\u578b\u53d8\u91cf {0}\uff0c\u4e0d\u5b58\u5728\u552f\u4e00\u6700\u5c0f\u5b9e\u4f8b
compiler.misc.no.conforming.instance.exists=\
\u4e0d\u5b58\u5728\u7c7b\u578b\u53d8\u91cf {0} \u7684\u5b9e\u4f8b\uff0c\u4ee5\u4f7f {1} \u4e0e {2} \u4e00\u81f4
compiler.misc.no.conforming.assignment.exists=\
\u4e0d\u5b58\u5728\u7c7b\u578b\u53d8\u91cf {0} \u7684\u5b9e\u4f8b\uff0c\u4ee5\u4f7f\u53c2\u6570\u7c7b\u578b {1} \u4e0e\u5f62\u5f0f\u53c2\u6570\u7c7b\u578b {2} \u4e00\u81f4
compiler.misc.arg.length.mismatch=\
\u65e0\u6cd5\u4ece\u53c2\u6570\u8fdb\u884c\u5b9e\u4f8b\u5316\uff0c\u56e0\u4e3a\u5b9e\u9645\u53c2\u6570\u5217\u8868\u548c\u5f62\u5f0f\u53c2\u6570\u5217\u8868\u957f\u5ea6\u4e0d\u540c
compiler.misc.inferred.do.not.conform.to.bounds=\
\u63a8\u7406\u7c7b\u578b\u53c2\u6570 {0} \u4e0d\u7b26\u5408\u7c7b\u578b\u53d8\u91cf {1} \u7684\u9650\u5236\u8303\u56f4

#####

## The first argument ({0}) is a "kindname".
compiler.err.abstract.cant.be.accessed.directly=\
\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee {2} \u4e2d\u7684\u62bd\u8c61 {0} {1}

## The first argument ({0}) is a "kindname".
compiler.err.non-static.cant.be.ref=\
\u65e0\u6cd5\u4ece\u9759\u6001\u4e0a\u4e0b\u6587\u4e2d\u5f15\u7528\u975e\u9759\u6001 {0} {1}

## Both arguments ({0}, {1}) are "kindname"s.  {0} is a comma-separated list
## of kindnames (the list should be identical to that provided in source.
compiler.err.unexpected.type=\
\u610f\u5916\u7684\u7c7b\u578b\n\
\u9700\u8981\uff1a {0}\n\
\u627e\u5230\uff1a {1}

## The first argument ({0}) is a "kindname".
compiler.err.cant.resolve=\
\u627e\u4e0d\u5230\u7b26\u53f7\n\
\u7b26\u53f7\uff1a {0} {3}{1}{2}

## The first argument ({0}) and fifth argument ({4}) are "kindname"s.
compiler.err.cant.resolve.location=\
\u627e\u4e0d\u5230\u7b26\u53f7\n\
\u7b26\u53f7\uff1a {0} {3}{1}{2}\n\
\u4f4d\u7f6e\uff1a {4} {5}

## The following are all possible string for "kindname".
## They should be called whatever the JLS calls them after it been translated
## to the appropriate language.
# compiler.misc.kindname.constructor=\
#     static member
compiler.misc.kindname.annotation=\
@interface
compiler.misc.kindname.constructor=\
\u6784\u9020\u51fd\u6570
compiler.misc.kindname.interface=\
\u63a5\u53e3
compiler.misc.kindname.static=\
\u9759\u6001
compiler.misc.kindname.type.variable=\
\u7c7b\u578b\u53d8\u91cf\u7684\u9650\u5236\u8303\u56f4
compiler.misc.kindname=\
\u6807\u8bc6\u7b26 ({0})
compiler.misc.kindname.variable=\
\u53d8\u91cf
compiler.misc.kindname.value=\
\u503c
compiler.misc.kindname.method=\
\u65b9\u6cd5
compiler.misc.kindname.variable.method=\
\u53d8\u91cf\u3001\u65b9\u6cd5
compiler.misc.kindname.value.method=\
\u503c\u3001\u65b9\u6cd5
compiler.misc.kindname.class=\
\u7c7b
compiler.misc.kindname.variable.class=\
\u53d8\u91cf\u3001\u7c7b
compiler.misc.kindname.value.class=\
\u503c\u3001\u7c7b
compiler.misc.kindname.method.class=\
\u65b9\u6cd5\u3001\u7c7b
compiler.misc.kindname.variable.method.class=\
\u53d8\u91cf\u3001\u65b9\u6cd5\u3001\u7c7b
compiler.misc.kindname.value.method.class=\
\u503c\u3001\u65b9\u6cd5\u3001\u7c7b
compiler.misc.kindname.package=\
\u8f6f\u4ef6\u5305
compiler.misc.kindname.variable.package=\
\u53d8\u91cf\u3001\u8f6f\u4ef6\u5305
compiler.misc.kindname.value.package=\
\u503c\u3001\u8f6f\u4ef6\u5305
compiler.misc.kindname.method.package=\
\u65b9\u6cd5\u3001\u8f6f\u4ef6\u5305
compiler.misc.kindname.variable.method.package=\
\u53d8\u91cf\u3001\u65b9\u6cd5\u3001\u8f6f\u4ef6\u5305
compiler.misc.kindname.value.method.package=\
\u503c\u3001\u65b9\u6cd5\u3001\u8f6f\u4ef6\u5305
compiler.misc.kindname.class.package=\
\u7c7b\u3001\u8f6f\u4ef6\u5305
compiler.misc.kindname.variable.class.package=\
\u53d8\u91cf\u3001\u7c7b\u3001\u8f6f\u4ef6\u5305
compiler.misc.kindname.value.class.package=\
\u503c\u3001\u7c7b\u3001\u8f6f\u4ef6\u5305
compiler.misc.kindname.method.class.package=\
\u65b9\u6cd5\u3001\u7c7b\u3001\u8f6f\u4ef6\u5305
compiler.misc.kindname.variable.method.class.package=\
\u53d8\u91cf\u3001\u65b9\u6cd5\u3001\u7c7b\u3001\u8f6f\u4ef6\u5305
compiler.misc.kindname.value.method.class.package=\
\u503c\u3001\u65b9\u6cd5\u3001\u7c7b\u3001\u8f6f\u4ef6\u5305

#####

compiler.err.override.static=\
{0}\uff1b\u8986\u76d6\u7684\u65b9\u6cd5\u4e3a\u9759\u6001
compiler.err.override.meth=\
{0}\uff1b\u88ab\u8986\u76d6\u7684\u65b9\u6cd5\u4e3a {1}

compiler.err.override.meth.doesnt.throw=\
{0}\uff1b\u88ab\u8986\u76d6\u7684\u65b9\u6cd5\u4e0d\u629b\u51fa {1}

# In the following string {1} is a space separated list of Java Keywords, as
# they would have been declared in the source code
compiler.err.override.weaker.access=\
{0}\uff1b\u6b63\u5728\u5c1d\u8bd5\u6307\u5b9a\u66f4\u4f4e\u7684\u8bbf\u95ee\u6743\u9650\uff1b\u4e3a {1}

compiler.misc.override.incompatible.ret=\
{0}\uff1b\u6b63\u5728\u5c1d\u8bd5\u4f7f\u7528\u4e0d\u517c\u5bb9\u7684\u8fd4\u56de\u7c7b\u578b

compiler.misc.override.unchecked.ret=\
{0}\uff1b\u8fd4\u56de\u7c7b\u578b\u9700\u8981\u672a\u7ecf\u68c0\u67e5\u7684\u8f6c\u6362

## The following are all possible strings for the first argument ({0}) of the
## above strings.
compiler.misc.cant.override=\
{1} \u4e2d\u7684 {0} \u65e0\u6cd5\u8986\u76d6 {3} \u4e2d\u7684 {2}
compiler.misc.cant.implement=\
{1} \u4e2d\u7684 {0} \u65e0\u6cd5\u5b9e\u73b0 {3} \u4e2d\u7684 {2}
compiler.misc.clashes.with=\
{1} \u4e2d\u7684 {0} \u4e0e {3} \u4e2d\u7684 {2} \u51b2\u7a81
compiler.misc.unchecked.override=\
{1} \u4e2d\u7684 {0} \u8986\u76d6\u4e86 {3} \u4e2d\u7684 {2}
compiler.misc.unchecked.implement=\
{1} \u4e2d\u7684 {0} \u5b9e\u73b0\u4e86 {3} \u4e2d\u7684 {2}
compiler.misc.unchecked.clash.with=\
{1} \u4e2d\u7684 {0} \u8986\u76d6\u4e86 {3} \u4e2d\u7684 {2}
compiler.misc.varargs.override=\
{1} \u4e2d\u7684 {0} \u8986\u76d6\u4e86 {3} \u4e2d\u7684 {2}
compiler.misc.varargs.implement=\
{1} \u4e2d\u7684 {0} \u5b9e\u73b0\u4e86 {3} \u4e2d\u7684 {2}
compiler.misc.varargs.clash.with=\
{1} \u4e2d\u7684 {0} \u8986\u76d6\u4e86 {3} \u4e2d\u7684 {2}

########################################
# Diagnostics for language feature changes
########################################
compiler.err.unsupported.fp.lit=\
\u5728 -source 5 \u4e4b\u524d\uff0c\u4e0d\u652f\u6301\u5341\u516d\u8fdb\u5236\u6d6e\u70b9\u5b57\u9762\u503c

compiler.warn.enum.as.identifier=\
\u4ece\u53d1\u884c\u7248 5 \u5f00\u59cb\uff0c"enum" \u4e3a\u5173\u952e\u5b57\uff0c\u800c\u4e0d\u7528\u4f5c\u6807\u8bc6\u7b26\n\
\uff08\u8bf7\u4f7f\u7528 -source 5 \u6216\u66f4\u9ad8\u7248\u672c\u4ee5\u5c06 "enum"' \u7528\u4f5c\u5173\u952e\u5b57\uff09

compiler.warn.assert.as.identifier=\
\u4ece\u7248\u672c 1.4 \u5f00\u59cb\uff0c''assert'' \u662f\u4e00\u4e2a\u5173\u952e\u5b57\uff0c\u4f46\u4e0d\u80fd\u7528\u4f5c\u6807\u8bc6\u7b26\n\
\uff08\u8bf7\u4f7f\u7528 -source 1.4 \u6216\u66f4\u9ad8\u7248\u672c\u4ee5\u4fbf\u5c06 ''assert'' \u7528\u4f5c\u5173\u952e\u5b57\uff09

compiler.err.enum.as.identifier=\
\u4ece\u53d1\u884c\u7248 5 \u5f00\u59cb\uff0c"enum" \u4e3a\u5173\u952e\u5b57\uff0c\u800c\u4e0d\u7528\u4f5c\u6807\u8bc6\u7b26\n\
\uff08\u8bf7\u4f7f\u7528 -source 1.4 \u6216\u66f4\u4f4e\u7248\u672c\u4ee5\u5c06 "enum" \u7528\u4f5c\u6807\u8bc6\u7b26\uff09

compiler.err.assert.as.identifier=\
\u4ece\u7248\u672c 1.4 \u5f00\u59cb\uff0c''assert'' \u662f\u4e00\u4e2a\u5173\u952e\u5b57\uff0c\u4f46\u4e0d\u80fd\u7528\u4f5c\u6807\u8bc6\u7b26\n\
\uff08\u8bf7\u4f7f\u7528 -source 1.3 \u6216\u66f4\u4f4e\u7248\u672c\u4ee5\u4fbf\u5c06 ''assert'' \u7528\u4f5c\u6807\u8bc6\u7b26\uff09

compiler.err.generics.not.supported.in.source=\
-source {0} \u4e2d\u4e0d\u652f\u6301\u6cdb\u578b\n\
\uff08\u8bf7\u4f7f\u7528 -source 5 \u6216\u66f4\u9ad8\u7248\u672c\u4ee5\u542f\u7528\u6cdb\u578b\uff09

compiler.err.varargs.not.supported.in.source=\
-source {0} \u4e2d\u4e0d\u652f\u6301 variable-arity \u65b9\u6cd5\n\
\uff08\u8bf7\u4f7f\u7528 -source 5 \u6216\u66f4\u9ad8\u7248\u672c\u4ee5\u542f\u7528 variable-arity \u65b9\u6cd5\uff09

compiler.err.annotations.not.supported.in.source=\
-source {0} \u4e2d\u4e0d\u652f\u6301\u6ce8\u91ca\n\
\uff08\u8bf7\u4f7f\u7528 -source 5 \u6216\u66f4\u9ad8\u7248\u672c\u4ee5\u542f\u7528\u6ce8\u91ca\uff09

compiler.err.foreach.not.supported.in.source=\
-source {0} \u4e2d\u4e0d\u652f\u6301 for-each \u5faa\u73af\n\
\uff08\u8bf7\u4f7f\u7528 -source 5 \u6216\u66f4\u9ad8\u7248\u672c\u4ee5\u542f\u7528 for-each \u5faa\u73af\uff09

compiler.err.static.import.not.supported.in.source=\
-source {0} \u4e2d\u4e0d\u652f\u6301\u9759\u6001\u5bfc\u5165\u58f0\u660e\n\
\uff08\u8bf7\u4f7f\u7528 -source 5 \u6216\u66f4\u9ad8\u7248\u672c\u4ee5\u542f\u7528\u9759\u6001\u5bfc\u5165\u58f0\u660e\uff09

compiler.err.enums.not.supported.in.source=\
-source {0} \u4e2d\u4e0d\u652f\u6301\u679a\u4e3e\n\
\uff08\u8bf7\u4f7f\u7528 -source 5 \u6216\u66f4\u9ad8\u7248\u672c\u4ee5\u542f\u7528\u679a\u4e3e\uff09
